description: generate pattern to defect potential defects or generate patches

# model
# python interpreter path
pythonCmd: /root/anaconda3/envs/fix_graph/bin/python
# python project path
modelWorkPath: /data02/hanjiachen/FixGen/fix_graph_1
# python script
modelPath: /data02/hanjiachen/FixGen/fix_graph_1/run.py
# model input path, related to variable in run.py
jsonBefore: /data02/hanjiachen/FixGen/intermediate/json_input
# model output path, related to variable in run.py
jsonAfter: /data02/hanjiachen/FixGen/intermediate/json_output

# running info
# pattern graph in dot file
codeGraphPath: /data02/hanjiachen/FixGen/out/code_graph_out
patternGraphPath: /data02/hanjiachen/FixGen/out/pattern_out

# test on dataset
testOnDataset:
  datasetName: c3
  datasetPath: /data02/hanjiachen/FixGen/dataset/c3
  # example data path
  # datasetPath: example/dataset/c3/ant
  # store patch in patchPath
  patchPath: /data02/hanjiachen/FixGen/out/model_patch/c3

# about extract patterns
extractPattern:
  datasetName: c3-junit
  # from where to extract patterns
  dataPath: E:/dataset/FixBench/c3/junit
  # example data path
  # dataPath: example/dataset/c3/ant
  # store patterns in patternPath
  patternPath: D:/workspace/FixGen/example/patterns

# about defect faults
defectFaults:
  # patterns path, same with extractPattern/patternPath
  patternPath: D:/workspace/FixGen/example/patterns
  # the threshold to apply pattern
  threshold: 0.9
  # the project to scan root path
  #  projectPath: E:/dataset/FixBench/fixBenchTest/project-repos/arthas
  projectPath: E:/dataset/FixBench/c3/junit
  # store patch in resultsPath
  resultsPath: D:/workspace/FixGen/example/out/faults_results

